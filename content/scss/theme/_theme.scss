@use 'sass:meta';
@use 'sass:map';
@use 'sass:color';

@use '../vars';
@use '../mixins';
@use '../themes';

$themeName: null !default;
$tooltipTheme: 'dark' !default;
$datetimeTheme: 'default' !default;
$theme: map.merge(map.get(meta.module-variables("themes"), "default-theme"), map.get(meta.module-variables("themes"), "#{$themeName}-theme"));

//---------------------- PAGE STYLING ----------------------
.app-page.#{$themeName}
{
    background-color: map.get($theme, primaryBackgroundColor);
    color: map.get($theme, primaryForegroundColor);

    //############## PACKAGES ##############

    @include meta.load-css('../../../node_modules/@anglr/datetime/src/#{$datetimeTheme}');
    @include meta.load-css("../../../node_modules/@anglr/common/styles/positions/#{$tooltipTheme}");

    //############## SCROLLBAR ##############

    .thin-scrollbar
    {
        scrollbar-color: map.get($theme, primaryScrollbarColor) map.get($theme, primaryScrollbarBackground);
    }

    .thin-scrollbar::-webkit-scrollbar-thumb
    {
        background-color: map.get($theme, primaryScrollbarColor);
    }

    .thin-scrollbar::-webkit-scrollbar
    {
        background-color: map.get($theme, primaryScrollbarBackground);
    }

    //############## BLOCKS ##############

    .popup-block
    {
        box-shadow: 0 0 3px map.get($theme, popupBorder);
        background-color: map.get($theme, popupBackground);
    }

    //############## BUTTONS ##############

    .btn-line
    {
        background-color: map.get($theme, btnLineBackground);
        color: map.get($theme, btnLineForeground);

        &:hover
        {
            background-color: lighten(map.get($theme, btnLineBackground), 9%);
        }

        &:active, &.active
        {
            background-color: lighten(map.get($theme, btnLineBackground), 15%);
        }

        &>span[class^="fa"],
        &>span[class^="fas"],
        &>span[class^="glyphicon"]
        {
            color: darken(map.get($theme, btnLineForeground), 12%);
            margin-right: vars.$sizeXs;
        }
    }

    @include mixins.generate-button(map.get($theme, buttons));


    //############## NG SELECT ##############

    ng-select
    {
        button.btn-select
        {
            background-color: map.get($theme, primarySelectBackgroundColor);

            &.btn:hover, &.btn:focus
            {
                color: map.get($theme, primarySelectForegroundColor);
            }
        }

        .popup-div
        {
            background-color: map.get($theme, primarySelectPopupBackgroundColor);
            color: map.get($theme, primarySelectPopupForegroundColor);

            .option-item:hover, .option-item.selected, .option-item.active
            {
                background-color: lighten(map.get($theme, primarySelectBackgroundColor), 10%);
                background-image: linear-gradient(to bottom, lighten(map.get($theme, primarySelectBackgroundColor), 10%) 0,lighten(map.get($theme, primarySelectBackgroundColor), 15%) 100%);
                color: map.get($theme, primarySelectForegroundColor);
            }
        }

        input.form-control
        {
            background-color: map.get($theme, primarySelectInputBackgroundColor);
            color: map.get($theme, primarySelectInputForegroundColor);
        }
    }

    //############## SHARED ##############

    @include meta.load-css('components/shared', $with: (theme: $theme));
}